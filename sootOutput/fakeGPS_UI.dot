digraph "callgraph" {
    "<dummyMainClass: void dummyMainMethod()>"
    "<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"
    "<dummyMainClass: void dummyMainMethod()>"->"<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>";
    "<com.lexa.fakegps.FakeGPSService: void onCreate()>"
    "<dummyMainClass: void dummyMainMethod()>"->"<com.lexa.fakegps.FakeGPSService: void onCreate()>";
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"
    "<dummyMainClass: void dummyMainMethod()>"->"<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>";
    "<com.lexa.fakegps.FakeGPSService: android.os.IBinder onBind(android.content.Intent)>"
    "<dummyMainClass: void dummyMainMethod()>"->"<com.lexa.fakegps.FakeGPSService: android.os.IBinder onBind(android.content.Intent)>";
    "<com.lexa.fakegps.FakeGPSService: void onDestroy()>"
    "<dummyMainClass: void dummyMainMethod()>"->"<com.lexa.fakegps.FakeGPSService: void onDestroy()>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"
    "<dummyMainClass: void dummyMainMethod()>"->"<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>";
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"
    "<dummyMainClass: void dummyMainMethod()>"->"<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>";
    "<android.util.Log: int d(java.lang.String,java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.util.Log: int d(java.lang.String,java.lang.String)>";
    "<com.lexa.fakegps.FakeGPSService: java.lang.String a()>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<com.lexa.fakegps.FakeGPSService: java.lang.String a()>";
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.util.Log: int d(java.lang.String,java.lang.String)>";
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<com.lexa.fakegps.FakeGPSService: java.lang.String a()>";
    "<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>";
    "<v: void a(com.google.android.maps.GeoPoint,x)>"
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<v: void a(com.google.android.maps.GeoPoint,x)>";
    "<java.lang.Double: java.lang.Double valueOf(double)>"
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<java.lang.Double: java.lang.Double valueOf(double)>";
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<java.lang.Double: java.lang.Double valueOf(double)>";
    "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>"
    "<com.lexa.fakegps.FakeGPSService: void onDestroy()>"->"<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>";
    "<java.lang.Class: java.lang.String getSimpleName()>"
    "<java.lang.Class: java.lang.Package getPackage()>"
    "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
    "<java.lang.StringBuilder: java.lang.String toString()>"
    "<java.lang.Package: java.lang.String getName()>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>";
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>";
    "<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>";
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>";
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>";
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>";
    "<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>"
    "<com.lexa.fakegps.FakeGPSService$BootReceiver: void onReceive(android.content.Context,android.content.Intent)>"->"<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>";
    "<android.content.ContextWrapper: android.content.Context getApplicationContext()>"
    "<com.lexa.fakegps.FakeGPSService: void onCreate()>"->"<android.content.ContextWrapper: android.content.Context getApplicationContext()>";
    "<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService: void onCreate()>"->"<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"
    "<com.lexa.fakegps.FakeGPSService: void onCreate()>"->"<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>";
    "<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>"
    "<com.lexa.fakegps.FakeGPSService: void onCreate()>"->"<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>";
    "<android.content.IntentFilter: void addAction(java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService: void onCreate()>"->"<android.content.IntentFilter: void addAction(java.lang.String)>";
    "<java.lang.Float: float parseFloat(java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.Float: float parseFloat(java.lang.String)>";
    "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.Float: float parseFloat(java.lang.String)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.Float: float parseFloat(java.lang.String)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>";
    "<android.content.Intent: double getDoubleExtra(java.lang.String,double)>"
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<android.content.Intent: double getDoubleExtra(java.lang.String,double)>";
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<android.content.Intent: double getDoubleExtra(java.lang.String,double)>";
    "<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>"
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>";
    "<b: void a(double,double)>"
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<b: void a(double,double)>";
    "<android.content.Context: java.lang.String getString(int,java.lang.Object[])>"
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<android.content.Context: java.lang.String getString(int,java.lang.Object[])>";
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService: void onStart(android.content.Intent,int)>"->"<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>";
    "<android.util.Log: int i(java.lang.String,java.lang.String)>"
    "<b: void a(double,double)>"->"<android.util.Log: int i(java.lang.String,java.lang.String)>";
    "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
    "<b: void a(double,double)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "<b: void a(double,double)>"->"<java.lang.Double: java.lang.Double valueOf(double)>";
    "<java.lang.Float: java.lang.Float valueOf(float)>"
    "<b: void a(double,double)>"->"<java.lang.Float: java.lang.Float valueOf(float)>";
    "<b: void a(double,double)>"->"<java.lang.Double: java.lang.Double valueOf(double)>";
    "<b: void a(double,double)>"->"<java.lang.Double: java.lang.Double valueOf(double)>";
    "<java.lang.Integer: java.lang.Integer valueOf(int)>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<java.lang.Integer: java.lang.Integer valueOf(int)>";
    "<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>";
    "<b: void a()>"
    "<com.lexa.fakegps.FakeGPSService: void onDestroy()>"->"<b: void a()>";
    "<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>"
    "<com.lexa.fakegps.FakeGPSService: void onDestroy()>"->"<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>";
    "<com.lexa.fakegps.FakeGPSService: void b()>"
    "<com.lexa.fakegps.FakeGPSService: void onDestroy()>"->"<com.lexa.fakegps.FakeGPSService: void b()>";
    "<android.widget.Toast: void show()>"
    "<com.lexa.fakegps.FakeGPSService: void onDestroy()>"->"<android.widget.Toast: void show()>";
    "<com.lexa.fakegps.FakeGPSService: void b()>"->"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>";
    "<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>"
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>";
    "<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>"
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>";
    "<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>"
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>"
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>";
    "<android.preference.Preference: void setEnabled(boolean)>"
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setEnabled(boolean)>";
    "<android.preference.PreferenceGroup: void setEnabled(boolean)>"
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.PreferenceGroup: void setEnabled(boolean)>";
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>";
    "<android.preference.CheckBoxPreference: boolean isChecked()>"
    "<com.lexa.fakegps.Settings: void onCreate(android.os.Bundle)>"->"<android.preference.CheckBoxPreference: boolean isChecked()>";
    "<android.preference.Preference: java.lang.String getKey()>"
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<android.preference.Preference: java.lang.String getKey()>";
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<android.preference.Preference: java.lang.String getKey()>";
    "<java.lang.String: boolean equals(java.lang.Object)>"
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>";
    "<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>"
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>";
    "<java.lang.Boolean: boolean booleanValue()>"
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<java.lang.Boolean: boolean booleanValue()>";
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<android.preference.Preference: void setEnabled(boolean)>";
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<android.preference.PreferenceGroup: void setEnabled(boolean)>";
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>"
    "<j: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>"->"<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>";
    "<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>"
    "<v: void a(com.google.android.maps.GeoPoint,x)>"->"<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>";
    "<z: java.lang.Object doInBackground(java.lang.Object[])>"
    "<v: void a(com.google.android.maps.GeoPoint,x)>"->"<z: java.lang.Object doInBackground(java.lang.Object[])>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.Boolean: boolean booleanValue()>";
    "<java.lang.String: int length()>"
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: int length()>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: int length()>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: int length()>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.String: int length()>";
    "<java.lang.Integer: int intValue()>"
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<java.lang.Integer: int intValue()>";
    "<b: void a(int)>"
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<b: void a(int)>";
    "<b: void a(float)>"
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<b: void a(float)>";
    "<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>"
    "<com.lexa.fakegps.FakeGPSService: void a(android.content.Intent)>"->"<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>";
    "<b: void a(int)>"->"<android.util.Log: int i(java.lang.String,java.lang.String)>";
    "<java.lang.Math: int max(int,int)>"
    "<b: void a(int)>"->"<java.lang.Math: int max(int,int)>";
    "<b: void a(float)>"->"<android.util.Log: int i(java.lang.String,java.lang.String)>";
    "<b: int b()>"
    "<b: void b(int)>"
    "<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>"
    "<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>"
    "<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>"
    "<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>"
    "<android.location.LocationManager: void removeTestProvider(java.lang.String)>"
    "<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>"
    "<b: int b()>"->"<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>";
    "<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>"
    "<b: int b()>"->"<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>";
    "<b: void b(int)>"->"<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>";
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>"
    "<android.location.Location: void setLongitude(double)>"
    "<b: void a(double,double)>"->"<android.location.Location: void setLongitude(double)>";
    "<android.location.Location: void setLatitude(double)>"
    "<b: void a(double,double)>"->"<android.location.Location: void setLatitude(double)>";
    "<android.location.Location: void setAccuracy(float)>"
    "<b: void a(double,double)>"->"<android.location.Location: void setAccuracy(float)>";
    "<android.location.Location: void setAltitude(double)>"
    "<b: void a(double,double)>"->"<android.location.Location: void setAltitude(double)>";
    "<android.location.Location: double getLatitude()>"
    "<b: void a(double,double)>"->"<android.location.Location: double getLatitude()>";
    "<android.location.Location: double getLongitude()>"
    "<b: void a(double,double)>"->"<android.location.Location: double getLongitude()>";
    "<android.location.Location: float getAccuracy()>"
    "<b: void a(double,double)>"->"<android.location.Location: float getAccuracy()>";
    "<android.location.Location: double getAltitude()>"
    "<b: void a(double,double)>"->"<android.location.Location: double getAltitude()>";
    "<java.lang.Thread: boolean isAlive()>"
    "<b: void a(double,double)>"->"<java.lang.Thread: boolean isAlive()>";
    "<java.lang.Thread: void start()>"
    "<b: void a(double,double)>"->"<java.lang.Thread: void start()>";
    "<b: void run()>"
    "<b: void a(double,double)>"->"<b: void run()>";
    "<b: void run()>"->"<android.util.Log: int i(java.lang.String,java.lang.String)>";
    "<java.lang.Thread: void sleep(long)>"
    "<b: void run()>"->"<java.lang.Thread: void sleep(long)>";
    "<java.lang.Math: double random()>"
    "<b: void run()>"->"<java.lang.Math: double random()>";
    "<java.lang.Math: double sqrt(double)>"
    "<b: void run()>"->"<java.lang.Math: double sqrt(double)>";
    "<b: void run()>"->"<java.lang.Math: double random()>";
    "<java.lang.Object: long elapsedRealtimeNanos()>"
    "<b: void run()>"->"<java.lang.Object: long elapsedRealtimeNanos()>";
    "<java.lang.System: long currentTimeMillis()>"
    "<b: void run()>"->"<java.lang.System: long currentTimeMillis()>";
    "<b: void run()>"->"<android.util.Log: int i(java.lang.String,java.lang.String)>";
    "<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>";
    "<android.content.Context: java.lang.String getString(int)>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<android.content.Context: java.lang.String getString(int)>";
    "<java.lang.Object: java.lang.Class getClass()>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<java.lang.Object: java.lang.Class getClass()>";
    "<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>";
    "<java.lang.String: int hashCode()>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<java.lang.String: int hashCode()>";
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "<android.app.NotificationManager: void notify(int,android.app.Notification)>"
    "<com.lexa.fakegps.FakeGPSService: void a(java.lang.String)>"->"<android.app.NotificationManager: void notify(int,android.app.Notification)>";
    "<java.lang.Thread: void interrupt()>"
    "<b: void a()>"->"<java.lang.Thread: void interrupt()>";
    "<b: void a()>"->"<b: int b()>";
    "<b: void a()>"->"<b: void b(int)>";
    "<b: void a()>"->"<android.location.LocationManager: void removeTestProvider(java.lang.String)>";
    "<com.lexa.fakegps.FakeGPSService: void b()>"->"<java.lang.Object: java.lang.Class getClass()>";
    "<com.lexa.fakegps.FakeGPSService: void b()>"->"<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>";
    "<com.lexa.fakegps.FakeGPSService: void b()>"->"<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "<android.app.NotificationManager: void cancel(int)>"
    "<com.lexa.fakegps.FakeGPSService: void b()>"->"<android.app.NotificationManager: void cancel(int)>";
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"
    "<z: java.lang.Object doInBackground(java.lang.Object[])>"->"<z: w[] a(com.google.android.maps.GeoPoint[])>";
    "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
    "<v: java.lang.String a()>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<v: java.lang.String a()>";
    "<v: w[] a(java.io.InputStream)>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<v: w[] a(java.io.InputStream)>";
    "<android.util.Log: int v(java.lang.String,java.lang.String)>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<android.util.Log: int v(java.lang.String,java.lang.String)>";
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<v: java.lang.String a()>";
    "<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>";
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.lang.Double: java.lang.Double valueOf(double)>";
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.lang.Double: java.lang.Double valueOf(double)>";
    "<java.util.Locale: java.util.Locale getDefault()>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.util.Locale: java.util.Locale getDefault()>";
    "<v: w[] b(java.io.InputStream)>"
    "<v: w[] a(java.io.InputStream)>"->"<v: w[] b(java.io.InputStream)>";
    "<v: w[] b(java.io.InputStream)>"->"<android.util.Log: int v(java.lang.String,java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.Float: float parseFloat(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.Float: float parseFloat(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<android.util.Log: int i(java.lang.String,java.lang.String)>";
    "<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>"
    "<v: w[] b(java.io.InputStream)>"->"<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>";
    "<v: w[] b(java.io.InputStream)>"->"<android.util.Log: int d(java.lang.String,java.lang.String)>";
    "<b: void a(int)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"
    "<b: void a(int)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
    "<b: void a(int)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<b: void a(float)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.lang.StringBuilder: java.lang.StringBuilder append(float)>"
    "<b: void a(float)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(float)>";
    "<b: void a(float)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<b: void a(float)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>"
    "<b: int b()>"->"<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>";
    "<b: int b()>"->"<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>";
    "<b: void b(int)>"->"<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>";
    "<b: void run()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<b: void run()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
    "<b: void run()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<b: void run()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.lang.Thread: boolean isInterrupted()>"
    "<b: void run()>"->"<java.lang.Thread: boolean isInterrupted()>";
    "<b: void run()>"->"<b: int b()>";
    "<b: void run()>"->"<b: void b(int)>";
    "<android.location.Location: void setTime(long)>"
    "<b: void run()>"->"<android.location.Location: void setTime(long)>";
    "<b: void run()>"->"<android.location.Location: void setAccuracy(float)>";
    "<b: void run()>"->"<android.location.Location: void setAltitude(double)>";
    "<b: void run()>"->"<android.location.Location: void setLongitude(double)>";
    "<b: void run()>"->"<android.location.Location: double getLatitude()>";
    "<b: void run()>"->"<android.location.Location: double getLongitude()>";
    "<b: void run()>"->"<android.location.Location: void setLatitude(double)>";
    "<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>"
    "<b: void run()>"->"<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>";
    "<java.util.Locale: java.lang.String getCountry()>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.util.Locale: java.lang.String getCountry()>";
    "<java.net.URL: java.lang.String toString()>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.net.URL: java.lang.String toString()>";
    "<java.net.URL: java.net.URLConnection openConnection()>"
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.net.URL: java.net.URLConnection openConnection()>";
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<z: w[] a(com.google.android.maps.GeoPoint[])>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "<v: w[] b(java.io.InputStream)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "<w: java.lang.String toString()>"
    "<v: w[] b(java.io.InputStream)>"->"<w: java.lang.String toString()>";
    "<w: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<w: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<w: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<w: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<w: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
}
